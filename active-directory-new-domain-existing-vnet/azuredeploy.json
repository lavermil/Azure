{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
			"defaultValue": "azureadmin",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "domainName": {
            "type": "string",
			"defaultValue": "exampledomain.local",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_E2as_v4",
            "metadata": {
                "description": "Size of the VM for the controller"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/lavermil/Azure/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "ADDC01",
            "metadata": {
                "description": "ADDC Virtual machine name."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "EXISTING-VNET-NAME-HERE",
            "metadata": {
                "description": "Existing Virtual network name where ADDC will go."
            }
        },
        "networkInterfaceName": {
            "type": "string",
            "defaultValue": "NIC01-ADDC01",
            "metadata": {
                "description": "ADDC Network interface name."
            }
        },
        "privateIPAddress": {
            "type": "string",
            "defaultValue": "10.187.1.4",
            "metadata": {
                "description": "ADDC Private IP address."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "EXISTING-VNET-SUBNET-NAME-HERE",
            "metadata": {
                "description": "Existing Subnet name where ADDC will go."
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "PIP01-NIC01-ADDC01",
            "metadata": {
                "description": "ADDC Public IP Name"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "AS01-ADDC",
            "metadata": {
                "description": "ADDC Availability set name."
            }
        },
        "networkSecurityGroups_RESOURCE_NAME_nsg_name": {
            "defaultValue": "NSG-<RESOURCE_NIC_NAME> or NSG-<SUBNET_NAME>",
            "type": "String"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(parameters('virtualMachineName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "name": "[parameters('availabilitySetName')]",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Inbound_Deny_RDP_SSH_SQL",
                        "properties": {
                            "description": "Deny All Inbound Internet Traffic for RDP,SSH,MSSQL,MySQL,MariaDB",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 900,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": ["22","1433","3306","3389"],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Inbound_Permit_All",
                        "properties": {
                            "description": "Permit All Inbound Traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Outbound_Permit_All",
                        "properties": {
                            "description": "Permit All Outbound Traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
		{
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'), '/Inbound_Deny_RDP_SSH_SQL')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'))]"
            ],
            "properties": {
                "description": "Deny All Internet Traffic for RDP,SSH,MSSQL,MySQL,MariaDB",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 900,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": ["22","1433","3306","3389"],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'), '/Inbound_Permit_All')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'))]"
            ],
            "properties": {
                "description": "Permit All Inbound Traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'), '/Outbound_Permit_All')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'))]"
            ],
            "properties": {
                "description": "Permit All Outbound Traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('publicIPAddressName')]",
                "[parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_RESOURCE_NAME_nsg_name'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId ('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('privateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('networkInterfaceName')]",
                "[parameters('availabilitySetName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'_OSDisk')]",
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('virtualMachineName'), '_DataDisk')]",
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": 20,
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            },
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "name": "CreateADForest",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[parameters('virtualMachineName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('active-directory-new-domain-existing-vnet/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken')))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        }
    ]
}
